@page "/favorites"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Krk.Models
@using Krk.Services
@inject FavoritesService FavoritesService
@inject ProtectedLocalStorage ProtectedLocalStore

<PageTitle>Karaoke | Favoritas</PageTitle>

<h1>Mis Canciones Favoritas</h1>

@if (isLoading)
{
    <p><em>Cargando...</em></p>
    return;
}

<p>Total: @favorites.Count()</p>
<table class="table">
    <thead>
        <tr>
            <th>Intérprete</th>
            <th>Canción</th>
            <th style="width:24px; padding-left:0px; padding-right:0px;"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var favorite in favorites)
        {
            <tr>
                <td>@favorite.Song.Artist</td>
                <td>@favorite.Song.Name</td>
                @if (!string.IsNullOrEmpty(user))
                {
                    <td>
                        <i class="bi bi-heart-fill cursor-pointer h4" @onclick="() => RemoveItemFromFavorites(favorite)"></i>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@code {
    private bool isLoading = true;
    private List<Favorite> favorites = new List<Favorite>();
    private string? user = "";

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        var userStore = await ProtectedLocalStore.GetAsync<string>("User");
        if (userStore.Success)
        {
            user = userStore.Value;
        }
        await GetUserFavorites();
        isLoading = false;
    }

    private async Task GetUserFavorites()
    {
        if (!string.IsNullOrEmpty(user))
        {
            favorites = await FavoritesService.GetUserFavorites(user);
        }
    }

    private async Task RemoveItemFromFavorites(Favorite favorite)
    {
        if (!string.IsNullOrEmpty(user))
        {
            await FavoritesService.RemoveSongFromFavorites(favorite.Id);
            favorites.Remove(favorite);
        }
    }
}